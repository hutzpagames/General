/**
 * @fileoverview
 * {@link https://github.com/mebjas/html5-qrcode}
 *
 * @author mebjas <minhazav@gmail.com>
 *
 * The word "QR Code" is registered trademark of DENSO WAVE INCORPORATED
 * http://www.denso-wave.com/qrcode/faqpatent-e.html
 *
 * Note: ECMA Script is not supported by all browsers. Using ES5 for
 * compatibility.
 */
var Html5Qrcode = function () {
    "use strict"; var t = function (t, e) { return (t = new (e || Promise)(function (n, r) { function i(t) { try { o(a.next(t)) } catch (t) { r(t) } } function s(t) { try { o(a.throw(t)) } catch (t) { r(t) } } function o(t) { t.done ? n(t.value) : new e(function (e) { e(t.value) }).then(i, s) } o((a = a.apply(t, void 0)).next()) })) }, e = function (t, e, n, r) { return new (n || (n = Promise))(function (i, s) { function o(t) { try { a(r.next(t)) } catch (t) { s(t) } } function u(t) { try { a(r.throw(t)) } catch (t) { s(t) } } function a(t) { var e; t.done ? i(t.value) : (e = t.value, e instanceof n ? e : new n(function (t) { t(e) })).then(o, u) } a((r = r.apply(t, e || [])).next()) }) }, n = function () { }; function r(t, e, i) { var s; void 0 === i && (i = !1); var o, u = null !== (s = e.getVideoTracks()) && void 0 !== s ? s : []; if (0 === u.length) throw "No video track found in stream"; var a = u.map(function (t) { return t.getCapabilities() }), c = []; return u.forEach(function (s, o) { var u = a[o]; if (i) { var d = {}; for (var h in t) d[h] = t[h]; var f = {}; for (var l in d) l in s.getConstraints() ? f[l] = s.getConstraints()[l] : l in u ? f[l] = u[l] : f[l] = void 0, f[l] !== d[l] && (c.push("'".concat(l, "' is not supported by selected camera; was ").concat(JSON.stringify(d[l]), ", expected ").concat(JSON.stringify(f[l]))), n(c[c.length - 1])); s.applyConstraints(d).then(function () { e.onVideoConstraintsApplied(s, s.getConstraints()), i && c.length > 0 && e.onVideoConstraintsIgnored(c) }).catch(function (t) { n("Error applying constraints", t) }) } else n("Not applying new constraints to video track.") }) } (r = o || (o = {})).onLog = function (t) { console.log(t) }, r.onWarning = function (t) { console.warn(t) }, r.onError = function (t, e) { console.error(t, e) }, r.onVideoConstraintsApplied = function (t, e) { n("Constraints applied to video track.") }, r.onVideoConstraintsIgnored = function (t) { n("Following constraints were ignored due to unknown reasons: ".concat(JSON.stringify(t))) }; var i, s; function o(t, e, i) {
        void 0 === i && (i = {}); var s = (i.onLog || n, i.onWarning || n, i.onError || n, i.onVideoConstraintsApplied || n, i.onVideoConstraintsIgnored || n, this); s.applyVideoConstraints = function (e) { return r(e, t, i) }, s.isTorchOn = function () { return "torch" in e.getCapabilities() && e.getCapabilities().torch }, s.getTorchCapabilities = function () { if ("torch" in e.getCapabilities()) return { supported: !0, defaultValue: e.getCapabilities().torch }; if ("torch" in e.getConstraints() && e.getConstraints().torch) return { supported: !0, defaultValue: e.getConstraints().torch }; var t = e.getSettings(); return "torch" in t ? { supported: !0, defaultValue: t.torch } : { supported: !1 } }, s.turnOnTorch = function () { if (s.getTorchCapabilities().supported) return r({ torch: !0, advanced: [{ torch: !0 }] }, t, i) }, s.turnOffTorch = function () { if (s.getTorchCapabilities().supported) return r({ torch: !1, advanced: [{ torch: !1 }] }, t, i) }, s.toggleTorch = function () { return s.isTorchOn() ? s.turnOffTorch() : s.turnOnTorch() }, s.setZoom = function (e) { if ("zoom" in t.getCapabilities()) return r({ zoom: e, advanced: [{ zoom: e }] }, t, i) }, s.getZoomCapabilities = function () { var e = { supported: !1 }; if ("zoom" in t.getCapabilities()) return { supported: !0, min: t.getCapabilities().zoom.min, max: t.getCapabilities().zoom.max, step: t.getCapabilities().zoom.step, defaultValue: t.getSettings().zoom }; var n = t.getConstraints(); return "zoom" in n ? { supported: !0, min: void 0, max: void 0, step: void 0, defaultValue: n.zoom } : { supported: !1 } }var a, c = function () {
            function n(t, e) { this.scanRegion = t, this.isShaded = e } return n.create = function (t, e, r) {
                var i, s = null !== (i = t.height) ? i : 0; if (e > s) throw "'regionHeight' cannot be greater than 'videoHeight("
                    .concat(s, ")'."); var o = t.width, u = t.height; if (o) {
                        if (e > o) throw "'regionWidth' cannot be greater than 'videoWidth("
                            .concat(o, ")'."); o = e, u = e
                    } var a = (t.width - o) / 2, c = (t.height - u) / 2, d = { x: a, y: c, width: o, height: u }; return new n(d, r)
            }, n
        }(), d = { QR_CODE: "qr_code", AZTEC: "aztec", CODABAR: "codabar", CODE_39: "code_39", CODE_93: "code_93", CODE_128: "code_128", DATA_MATRIX: "data_matrix", MAXICODE: "maxicode", ITF: "itf", EAN_13: "ean_13", EAN_8: "ean_8", PDF_417: "pdf_417", RSS_14: "rss_14", RSS_EXPANDED: "rss_expanded", UPC_A: "upc_a", UPC_E: "upc_e", UPC_EAN_EXTENSION: "upc_ean_extension", MSI: "msi", PLESSEY: "plessey" }, h = { FRONT: "user", BACK: "environment" }, f = function () { function t(t, e, n, r) { this.decodedText = t, this.decodedResult = e, this.format = n, this.props = r } return t.create = function (e, n) { var r = { format: e[0].format }; return new t(e[0].rawValue, e[0], d[e[0].format], r) }, t }(), l = "https://raw.githubusercontent.com/mebjas/html5-qrcode/master/src/experimental-features.ts", g = /^[a-z]+:\/\//; var p = function () { function t() { } return t.isUrl = function (e) { return "string" == typeof e && null !== e && -1 !== e.search(g) }, t }(), v = function (t) { return e(this, void 0, void 0, function () { var e, n; return t(this, function (t) { switch (t.label) { case 0: return e = "", [4, navigator.mediaDevices.getUserMedia({ video: !0 })]; case 1: return n = t.sent(), n.getVideoTracks().forEach(function (t) { e += t.label, t.stop() }), [2, e] } }) }) }, m = "html5-qrcode-anchor-scan-type-change", y = function () { function t() { this.shouldScan = function () { return !0 } } return t }(), b = function () { function t() { } return t.code = function () { return "HTML5_QRCODE_UNSUPPORTED" }, t.isSupported = function () { return "mediaDevices" in navigator && "getUserMedia" in navigator.mediaDevices && "Worker" in window && "BarcodeDetector" in window }, t }(), w = function () { function n(t, e, n) { this.verbose = t, this.logger = e, this.experimentalFeaturesConfig = n } return n.prototype.isExperimentalFeatureEnabled = function (t) { if (this.experimentalFeaturesConfig) { if (this.experimentalFeaturesConfig.enable || !1) return !0; if (this.experimentalFeaturesConfig.enableFor) { for (var e = 0; e < this.experimentalFeaturesConfig.enableFor.length; e++)if (this.experimentalFeaturesConfig.enableFor[e] === t) return !0 } } return !1 }, n }(), S = function () { function n(t, e) { this.element = t, this.verbose = e, this.logger = new w(e, new y, t.experimentalFeatures), n.isValid(this.element) } return n.prototype.show = function (t, e) { this.messageField.innerText = t, this.cameraManagerContainer.style.display = "none", this.messageField.style.display = "block", this.configUI(e) }, n.prototype.setVisible = function (t) { t ? this.element.style.display = "block" : this.element.style.display = "none" }, n.prototype.create = function () { var t = this; this.messageField = document.createElement("div"), this.messageField.style.textAlign = "center", this.messageField.style.fontSize = "1.2em", this.messageField.style.color = "rgb(172, 172, 172)", this.messageField.style.padding = "10px", this.messageField.innerText = "Initializing", this.cameraSelectionContainer = document.createElement("span"), this.cameraSelectionContainer.innerText = "Select Camera", this.cameraSelectionContainer.style.marginRight = "10px", this.cameraSelectionSelect = document.createElement("select"), this.permissionButton = document.createElement("button"), this.permissionButton.innerText = "Request Camera Permissions", this.permissionButton.addEventListener("click", function () { t.permissionButton.disabled = !0, t.show("Requesting camera permissions...", t.config), t.cameraManager.requestPermission().then(function (e) { t.show("Permissions granted.", t.config), t.cameraManager.render(t.config, e) }).catch(function (e) { t.permissionButton.disabled = !1, t.showError(e, t.config) }) }), this.cameraManagerContainer = document.createElement("span"), this.cameraManagerContainer.appendChild(this.cameraSelectionContainer), this.cameraManagerContainer.appendChild(this.cameraSelectionSelect), this.element.appendChild(this.permissionButton), this.element.appendChild(this.cameraManagerContainer), this.element.appendChild(this.messageField), this.messageField.style.display = "none" }, n.prototype.configUI = function (t) { if (this.config = t, t.useBarCodeDetectorIfSupported && b.isSupported()) this.cameraScanTypeSelector = this.createCameraScanTypeSelector(); else { var e; null === (e = this.cameraScanTypeSelector) || void 0 === e || e.remove(), this.cameraScanTypeSelector = void 0 } this.cameraSelectionSelect.innerHTML = "", this.cameraManager.getCameras().then(function (e) { e.forEach(function (e) { var n = document.createElement("option"); n.value = e.id, n.innerText = e.label, this.cameraSelectionSelect.appendChild(n) }.bind(this)) }).catch(function (e) { this.showError(e, t) }) }, n.prototype.createCameraScanTypeSelector = function () { var t = this, e = document.createElement("a"); return e.innerText = "Scan using camera directly", e.href = "#", e.id = m, e.addEventListener("click", function (n) { n.preventDefault(), t.scanTypeChangeListener(r.SCAN_TYPE_CAMERA) }), this.element.appendChild(e), e }, n.isValid = function (t) { if (!t) throw "root_element_id not found"; if ("string" != typeof t && !t.nodeName) throw "root_element_id must be string or HTMLElement"; var e; if ("string" == typeof t) try { if (!(e = document.getElementById(t))) throw "element with id '".concat(t, "' not found") } catch (t) { throw "document not found" } else e = t; return e }, n }(), R = 10, _ = function () { function n(t, e) { this.canvas, this.canvasContext, this.lastScanTime = Date.now(), this.verbose = e, this.logger = new w(e, new y, t.experimentalFeatures) } return n.prototype.decode = function (n, r) { var i = this, s = r.qrbox, o = r.formatsToSupport; return new Promise(function (u, a) { return e(i, void 0, void 0, function () { var e, r, i; return t(this, function (t) { switch (t.label) { case 0: return r = (e = new BarcodeDetector({ formats: o })).detect(n), [4, r]; case 1: return (i = t.sent()).length > 0 ? u(f.create(i)) : a("No code found."), [2] } }) }) }) }, n }(), L = function () { function n(t, e) { this.verbose = e, this.logger = new w(e, new y, t.experimentalFeatures) } return n.prototype.decode = function (n, r) { var i = this; return new Promise(function (s, o) { return e(i, void 0, void 0, function () { return t(this, function (t) { return s("Not implemented yet"), [2] }) }) }) }, n }(), k = function () { function t(e, n) { this.verbose = n, this.logger = new w(n, new y, e.experimentalFeatures), b.isSupported() ? this.decoder = new _(e, n) : this.decoder = new L(e, n) } return t.prototype.decode = function (t, e) { return this.decoder.decode(t, e) }, t }(), O = function () { function t(t, e) { this.html5Qrcode = t, this.verbose = e, this.logger = new w(e, new y, t.config) } return t.prototype.start = function (t, n, r, i) { var s = this; if (!t) throw "cameraId is required"; if (!n) throw "configuration is required"; if (!r) throw "qrCodeSuccessCallback is required"; this.stop(), this.currentScannerState = { cameraId: t, configuration: n, qrCodeSuccessCallback: r, qrCodeErrorCallback: i }; var o, u = document.getElementById(this.html5Qrcode.element.id); if (!u) throw "element with id ".concat(this.html5Qrcode.element.id, " not found"); return u.innerHTML = "", o = document.createElement("video"), o.style.width = "100%", o.style.height = "100%", o.setAttribute("playsinline", !0), u.appendChild(o), this.setScanner = new k(this.html5Qrcode.config, this.verbose), new Promise(function (a, c) { s.startVideo(t).then(function (u) { s.videoElement = o, s.videoElement.srcObject = u, s.stream = u; var d, h = null !== (d = n.fps) ? d : 2; s.scanInterval = setInterval(function () { s.scan(r, i) }, 1e3 / h), a(null) }).catch(function (t) { c(t) }) }) }, t.prototype.stop = function () { clearInterval(this.scanInterval); var t; null === (t = this.stream) || void 0 === t || t.getTracks().forEach(function (t) { t.stop() }) }, t.prototype.scan = function (t, n) { var r = this; if (this.videoElement && this.videoElement.nodeName.toLowerCase() === "video" && !this.videoElement.paused && !this.videoElement.ended) { var i = this.getScanRegion(); this.setScanner.decode(this.videoElement, this.currentScannerState.configuration).then(function (n) { e(r, void 0, void 0, function () { return this, function (e) { t(n.decodedText, n), n.decodedResult } }) }).catch(function (t) { var e, i, s; null == n || n(t), null === (s = null === (i = null === (e = r.currentScannerState) || void 0 === e ? void 0 : e.configuration) || void 0 === i ? void 0 : i.resultContinuation) }} }t.prototype.getScanRegion = function () { var t, e = this.currentScannerState.configuration, n = null !== (t = e.qrbox) ? t : 250, r = document.getElementById(this.html5Qrcode.element.id); if (!r) throw "element with id ".concat(this.html5Qrcode.element.id, " not found"); var i = { width: r.clientWidth, height: r.clientHeight }; return c.create(i, n, e.shaded) }, t.prototype.startVideo = function (t) { var n = this; if (this.stream) throw "video already started"; return new Promise(function (r, i) { var s = { deviceId: { exact: t } }; e(n, void 0, void 0, function () { var e; return this, function (n) { navigator.mediaDevices.getUserMedia({ video: s }).then(function (t) { r(t) }).catch(function (t) { i("Error getting user media: ".concat(t)) }) } }) }) }, t }(), P = "qr-camera-permission-button", D = "qr-camera-selection-container", M = "qr-camera-selection", I = "qr-dashboard", x = "qr-dashboard-section-swap-camera", N = "qr-dashboard-section-torch", $ = function () { function t(t) { this.qrcode, this.element = t } return t.prototype.render = function (t, n, r) { var i = this; e(this, void 0, void 0, function () { return this, function (e) { var s; this.cameraScanType = r, this.renderElement.innerHTML = "", this.qrcode = new k(t.config, t.verbose), this.renderElement.appendChild(this.createVideoElement(t.config.aspectRatio)), null !== (s = this.videoElement) && void 0 !== s || (this.videoElement = this.renderElement.getElementsByTagName("video")[0]), this.createScanner(t.config, n, t.qrCodeSuccessCallback, t.qrCodeErrorCallback).then(function (e) { i.scanner = e, i.renderScanner(i.scanner, t) }).catch(function (e) { i.removeQrUi(), t.showError(e, t.config) }) } }) }, t.prototype.removeQrUi = function () { var t = document.getElementById(I); null != t && t.remove() }, t.prototype.createScanner = function (t, n, r, i) { var s = this; return new Promise(function (o, u) { e(s, void 0, void 0, function () { var e; return this, function (s) { (e = new O(this, t, n, r, i)).start().then(function (t) { o(e) }).catch(function (t) { u(t) }) } }) }) }, t.prototype.renderScanner = function (t, e) { this.renderElement.parentNode.appendChild(this.createDashboard(e.config)), this.internalConfig = e, this.updateFlashIcon(this.internalConfig) }, t.prototype.createDashboard = function (t) { var e, n, r, i = this, s = document.createElement("div"); s.id = I, s.style.width = "100%", s.style.position = "absolute", s.style.top = "0px", s.style.left = "0px", s.style.textAlign = "left"; var o = document.createElement("div"); o.style.textAlign = "left", s.appendChild(o); var u = document.createElement("div"); u.id = x, u.style.display = "inline-block", u.style.margin = "5px", u.style.padding = "5px", u.style.border = "1px solid white", u.style.borderRadius = "5px", u.style.background = "rgba(0, 0, 0, 0.6)"; var a = document.createElement("img"); a.src = F.ASSET_CAMERA_SWAP, a.style.width = "25px", a.style.opacity = "0.8", a.addEventListener("click", function () { var n; i.internalConfig, null === (n = i.scanner) || void 0 === n || n.flip() }); var c = document.createElement("span"); c.innerText = "Flip", c.style.margin = "5px", c.style.color = "white", c.style.cursor = "pointer", c.addEventListener("click", function () { var n; i.internalConfig, null === (n = i.scanner) || void 0 === n || n.flip() }), u.appendChild(a), u.appendChild(c), o.appendChild(u); var d = null !== (e = t.showTorchButtonIfSupported) && void 0 !== e && e, h = null !== (n = t.defaultTorchStateOn) && void 0 !== n && n; if (d) { var f = document.createElement("div"); f.id = N, f.style.display = "inline-block", f.style.margin = "5px", f.style.padding = "5px", f.style.border = "1px solid white", f.style.borderRadius = "5px", f.style.background = "rgba(0, 0, 0, 0.6)", f.style.cursor = "pointer"; var l = document.createElement("img"); this.flashImage = l, l.id = "flash-image", l.src = F.ASSET_FLASH_OFF, l.style.width = "25px", l.style.opacity = "0.8", f.appendChild(l), o.appendChild(f), f.addEventListener("click", function () { var t, e; null === (t = i.scanner) || void 0 === t || t.toggleFlash(), null === (e = i.internalConfig) || void 0 === e || e.onFlashStateChanged(i.scanner.isFlashOn()), i.updateFlashIcon(i.internalConfig) }), null !== (r = this.scanner) && void 0 !== r && r.hasFlash() || (f.style.display = "none"), h && f.click() } return s }, t.prototype.updateFlashIcon = function (t) { var e, n; if (null !== (e = this.scanner) && void 0 !== e && e.hasFlash() && this.flashImage) { var r = null !== (n = this.scanner) && void 0 !== n && n.isFlashOn(); r ? this.flashImage.src = F.ASSET_FLASH_ON : this.flashImage.src = F.ASSET_FLASH_OFF } }, t }(), U = function () { function t() { } return t.getCameras = function () { return e(this, void 0, void 0, function () { return this, function (e) { return new Promise(function (e, n) { navigator.mediaDevices.enumerateDevices().then(function (n) { var r = []; n.forEach(function (e) { "videoinput" == e.kind && r.push({ id: e.deviceId, label: e.label }) }), e(r) }).catch(function (e) { n(e.message) }) }) } }) }, t.getRunningTrackCapabilities = function (t) { var e, n = null !== (e = t.getVideoTracks()) && void 0 !== e ? e : []; if (0 === n.length) throw "No video track found in stream"; return { track: n[0], capabilities: n[0].getCapabilities(), settings: n[0].getSettings() } }, t.prototype.requestPermission = function () { return new Promise(function (n, r) { return e(this, void 0, void 0, function () { var e; return t(this, function (t) { switch (t.label) { case 0: return [4, navigator.mediaDevices.getUserMedia({ video: !0 })]; case 1: return e = t.sent(), e.getTracks().forEach(function (t) { t.stop() }), n(!0), [2] } }) }) }) }, t }(), W = "qr-file-input", G = "qr-file-scan-button", F = function () { function t() { } return t.ASSET_CAMERA_SWAP = "https://raw.githubusercontent.com/mebjas/html5-qrcode-assets/master/camera-swap.gif", t.ASSET_FLASH_ON = "https://raw.githubusercontent.com/mebjas/html5-qrcode-assets/master/flash-on.gif", t.ASSET_FLASH_OFF = "https://raw.githubusercontent.com/mebjas/html5-qrcode-assets/master/flash-off.gif", t }(), H = function () { function n() { } return n.isPlatformAsynchronous = function () { var t = navigator; if (t && t.userAgent) return /iPad|iPhone|iPod/.test(t.userAgent) && !window.MSStream }, n }(), K = "qr-shaded-region", z = function () { function t(t, e) { this.scanRegion = t, this.context = e } return t.prototype.show = function () { this.context.fillStyle = "rgba(0, 0, 0, 0.45)"; var t = this.scanRegion, e = this.context.canvas.width, n = this.context.canvas.height; this.context.fillRect(0, 0, e, n), this.context.clearRect(t.x, t.y, t.width, t.height), this.context.fillRect(t.x, t.y, t.width, t.height) }, t.prototype.hide = function () { this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height) }, t }(), V = function () { function n(t, e, n, r) { this._internalConfig = t, this._aspectRatio = e, this._element = n, this._containerWidth = r } return n.prototype.render = function () { this._element.innerHTML = "", this._element.appendChild(this.createVideoElement(this._aspectRatio)), this.videoElement = this._element.getElementsByTagName("video")[0]; var t = this.getShadedRegion(); t && (this.shadedRegion = new z(t, this.getCanvasContext()), this.shadedRegion.show()) }, n.prototype.getScanRegion = function () { var t, e = this._internalConfig, n = null !== (t = e.qrbox) ? t : 250, r = { width: this._containerWidth, height: this.getContainerHeight() }; return c.create(r, n, !0) }, n.prototype.createVideoElement = function (t) { var e = document.createElement("video"); return e.style.width = "100%", e.style.height = "100%", e.setAttribute("autoplay", "true"), e.setAttribute("muted", "true"), e.setAttribute("playsinline", "true"), e.setAttribute("id", "html5-qrcode-video"), e }, n.prototype.getShadedRegion = function () { var t, e = this._internalConfig, n = null !== (t = e.qrbox) ? t : 250; return c.create({ width: this._containerWidth, height: this.getContainerHeight() }, n, !0).scanRegion }, n.prototype.getContainerHeight = function () { return this.videoElement ? this.videoElement.clientHeight : 200 }, n.prototype.getCanvasContext = function () { if (this.canvasElement) { var t = this.canvasElement.getContext("2d"); if (!t) throw "Unable to get 2d context"; return t } var e = document.createElement("canvas"); e.style.width = "100%", e.style.height = "100%", e.id = K, e.style.position = "absolute", e.style.top = "0px", e.style.left = "0px", this.videoElement.parentNode.appendChild(e), this.canvasElement = e; var n = e.getContext("2d"); if (!n) throw "Unable to get 2d context"; return n }, n }(), J = { facingMode: h.BACK, aspectRatio: 1 }, Y = function () { function t(t, e) { this.elementId = t, this.verbose = e, this.config, this.currentScanType = r.SCAN_TYPE_CAMERA, this.section = void 0, this.html5Qrcode = void 0, this.logger = new w(e, new y, this.config ? this.config.experimentalFeatures : {}), this.foreverScanTimeout, this.localMediaStream, this.shouldScan = e, this.isScanning = e } return t.prototype.start = function (t, n, i, s) { var o = this; if (this.clear(), !t) throw "'cameraIdOrConfig' is required"; if (!n) throw "'configuration' is required"; if ("function" != typeof i) throw "'qrCodeSuccessCallback' is required."; var u = this.createConfig(n); return new Promise(function (n, a) { var h = o; e(o, void 0, void 0, function () { var e, f, l, g, p, v, m, y; return this, function (b) { switch (b.label) { case 0: return f = "string" == typeof t ? t : t.id, e = f, l = function (t) { o.onScanSuccess(t, i, s) }, g = function (t) { o.onScanFailure(t, s) }, [4, h.startScanning(e, u, l, g)]; case 1: return b.sent(), p = function (t) { h.onScanSuccess(t, i, s) }, v = function (t) { h.onScanFailure(t, s) }, o.isScanning || (o.isScanning = !0), o.foreverScanTimeout = setInterval(function () { if (o.shouldScan) { var t; null === (t = o.html5Qrcode) || void 0 === t || t.scan(p, v) } }, 1e3 / (u.fps || 2)), n(null), [2] } } }) }) }, t.prototype.stop = function () { return this.shouldScan = !1, this.isScanning = !1, clearInterval(this.foreverScanTimeout), this.html5Qrcode.stop() }, t.prototype.getRunningTrackCapabilities = function () { if (null === this.localMediaStream) throw "Scanning is not in running state, call this API only when scanning is running."; var e, n = null !== (e = this.localMediaStream.getVideoTracks()) && void 0 !== e ? e : []; if (0 === n.length) throw "No video track found in stream"; return { track: n[0], capabilities: n[0].getCapabilities(), settings: n[0].getSettings() } }, t.prototype.applyVideoConstraints = function (t) { if (!t) throw "constraints is required argument."; if (!this.isScanning) throw "Scanning is not in running state, call this API only when scanning is running."; var e, n = null !== (e = this.localMediaStream.getVideoTracks()) && void 0 !== e ? e : []; if (0 === n.length) throw "No video track found in stream"; if (1 !== n.length) throw "More than one video tracks found in stream, not sure which one to apply constraints to."; var r = {}; return n[0].applyConstraints(t).then(function () { r.isTorchOn = function () { return "torch" in n[0].getCapabilities() && n[0].getCapabilities().torch }, r.getTorchCapabilities = function () { }, r.turnOnTorch = function () { }, r.turnOffTorch = function () { }, r.toggleTorch = function () { }, r.setZoom = function (t) { }, r.getZoomCapabilities = function () { } }) }, t.prototype.clear = function () { var t = this, e = function () { var e; null === (e = t.localMediaStream) || void 0 === e || e.getTracks().forEach(function (t) { t.stop() }), t.localMediaStream = null, t.html5Qrcode.element.innerHTML = "" }; try { this.stop(), e() } catch (t) { t } }, t.prototype.onScanSuccess = function (t, e, n) { if (this.logger.log("Scan success callback called."), n && n.resultContinuation) return void this.logger.log("Result continuation logic callback passed, ignoring success callback for this scan."); var r = {}; e(t, r) }, t.prototype.onScanFailure = function (t, e) { this.logger.log("Scan failure callback called."), e && e(t) }, t.prototype.createConfig = function (t) { var e = J; return t && (e.fps = t.fps, e.qrbox = t.qrbox, e.aspectRatio = t.aspectRatio, e.disableFlip = t.disableFlip), e }, t.prototype.startScanning = function (t, n, r, i) { var s = this; return e(this, void 0, void 0, function () { return this, function (e) { var o = function (t) { var e; return e = { facingMode: "environment" }, t && (e.deviceId = { exact: t }), e }; return new Promise(function (e, u) { navigator.mediaDevices.getUserMedia({ video: o(t) }).then(function (t) { s.localMediaStream = t, s.html5Qrcode = new O(s, s.verbose), s.html5Qrcode.start(t, n, r, i).then(function (t) { e(t) }).catch(function (t) { u(t) }) }).catch(function (t) { u(t) }) }) } }) }, t.getCameras = function () { return U.getCameras() }, t }(), X = function () { function t(t, e) { this.elementId = t, this.verbose = !!e, this.qrcode, this.logger = new w(this.verbose, new y, void 0), this.setupUi() }; return t.prototype.start = function (t, n, r, i) { if (!t) throw "'cameraIdOrConfig' is required"; if (!n) throw "'configuration' is required"; if ("function" != typeof r) throw "'qrCodeSuccessCallback' is required."; var s = this.createConfig(t, n), o = this.createScanRegion(this.elementId, s); if (this.qrcode = new Y(this.elementId, this.verbose), this.qrcode.start(t, n, r, i).catch(function (t) { }), !this.verbose) return o; o.style.border = "6px solid #555555" }, t.prototype.stop = function () { return this.qrcode.stop() }, t.prototype.clear = function () { this.qrcode.clear() }, t.prototype.getRunningTrackCapabilities = function () { return this.qrcode.getRunningTrackCapabilities() }, t.prototype.applyVideoConstraints = function (t) { return this.qrcode.applyVideoConstraints(t) }, t.prototype.createConfig = function (t, e) { var n = { fps: 10, qrbox: 250 }; "object" == typeof t && (n.facingMode = t.facingMode, n.aspectRatio = t.aspectRatio), e && e.fps && (n.fps = e.fps), e && e.qrbox && (n.qrbox = e.qrbox), e && e.aspectRatio && (n.aspectRatio = e.aspectRatio), e && void 0 !== e.disableFlip && (n.disableFlip = e.disableFlip); var r = {}; return r.config = n, r.verbose = this.verbose, r.logger = this.logger, r }, t.prototype.createScanRegion = function (t, e) { var n = document.getElementById(t); if (!n) throw "HTML Element with id=".concat(t, " not found"); return n.style.position = "relative", n.style.padding = "0px", n.style.width = "100%", n.style.height = "100%", n.style.border = "1px solid silver", n }, t.prototype.setupUi = function () { }, t.prototype.removeScanRegion = function () { var t = document.getElementById(this.elementId); t && (t.style.position = "", t.style.padding = "", t.style.width = "", t.style.height = "", t.style.border = "") }, t.getCameras = function () { return U.getCameras() }, t }(); return X.Html5Qrcode = X, X.Html5QrcodeSupportedFormats = [d.QR_CODE, d.AZTEC, d.CODABAR, d.CODE_39, d.CODE_93, d.CODE_128, d.DATA_MATRIX, d.MAXICODE, d.ITF, d.EAN_13, d.EAN_8, d.PDF_417, d.RSS_14, d.RSS_EXPANDED, d.UPC_A, d.UPC_E, d.UPC_EAN_EXTENSION], X.Html5QrcodeScanner = X, X.Html5QrcodeScanType = { SCAN_TYPE_CAMERA: 0, SCAN_TYPE_FILE: 1 }, X
    } ();
